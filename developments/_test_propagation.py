#!/usr/bin/env python
# -*- coding: utf-8 -*-

from SuPyMode.workflow import Workflow, fiber_catalogue, configuration, Boundaries
from SuPyMode.profiles import AlphaProfile

# Predefine fibers to be used across tests
fibers = [
    fiber_catalogue.load_fiber('DCF1300S_33', wavelength=1550e-9),
    fiber_catalogue.load_fiber('DCF1300S_20', wavelength=1550e-9),
    fiber_catalogue.load_fiber('DCF1300S_42', wavelength=1550e-9)
]


f = fiber_catalogue.load_fiber('DCF1300S_33', wavelength=1550e-9)
g = configuration.ring.FusedProfile_03x03(fiber_radius=30e-6, index=1.4, fusion_degree='auto')
g.plot(show_removed=True)


# Initialize the workflow with the specified configuration and fibers
workflow = Workflow(
    fiber_list=fibers,
    clad_structure=configuration.ring.FusedProfile_03x03,
    fusion_degree=0.99,
    wavelength=1550e-9,
    resolution=90,
    plot_geometry=True,
    x_bounds="left",
    y_bounds="centering",
    boundaries=[Boundaries(right='symmetric')],
    n_sorted_mode=2,
    n_added_mode=2,
    debug_mode=0
)
import inspect




# Get the superset generated by the workflow, which contains the propagation environment
superset = workflow.get_superset()
superset.geometry.plot()


signature = inspect.signature(superset.plot_beating_length)
print("Signature of wrapper_method:", signature)

# superset.plot_index()s

# superset.wrapped(a=1)
# a = superset.plot_unit()

# print(a)

# superset.plot_adiabatic()
# superset.lol_method()

superset.generate_pdf_report(filename='lol')

# def inner(a: int) -> int:
#     """inner docstring"""
#     return a

# @wraps(inner)
# def wrapped(*args, **kwargs):
#     return inner(*args, **kwargs)
